classdef tigwelding_testvector < tigwelding
    
    properties
        path_to_tv
    end

    properties (Constant)
        mag_lower_bound = sqrt(power(10,-60/10));  % dBm

        tv_pwr_cutoff = [ ...
            1, 1, v; 1, 2, v; 1, 3, v; 
            ];
    end
    
    methods
        function obj = tigwelding_testvector(h_meta_tbl, path_to_tv)
            obj = obj@tigwelding(h_meta_tbl, ".");
            obj.path_to_tv = path_to_tv;
        end       
        
        function iq = make_testvector(obj, n_ovens)
            % determine range of indices of meas to use
            status = obj.meta_data_tbl{:,"Status"};
            status = status(status=="USE");

            % generate random indices from the meta table
            which_ovens = randperm(length(status),n_ovens);

            % for each oven selected
            iq = 0;
            for jj = which_ovens
                % get the oven iq
                obj.loadCData(jj);
                iq_jj = obj.cData;

                % normalize the data to unity power
                p_jj = mean(abs(iq_jj).^2);
                iq_jj = iq_jj/sqrt(p_jj);

                % trim the data
                iq_jj(abs(iq_jj)<obj.mag_lower_bound) = 0+0i;

                % add a random phase shift
                iq_jj = iq_jj.*exp(1i*2*pi*rand());

                % circ shift the oven iq
                n_shift = round(length(iq_jj)*rand(1));
                iq_jj = circshift(iq_jj, n_shift);

                % add to the output iq
                iq = iq + iq_jj;
            end
        end
    end
end

